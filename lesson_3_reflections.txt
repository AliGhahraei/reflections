-- When would you want to create a remote repository rather than keeping all your work local?
* When you intend to publish and share your code or content.


-- Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
* Because otherwise massive amounts of bandwidth would be wasted and you wouldn't be able to work on a project that is always changing (like the Linux project).


-- Describe the differences between forks, clones, and branches. When would you use one instead of another?
* A fork is used to create a new version of an existing repository and only works on GitHub. A clone is used to copy an existing repository. A fork is a clone that happens on GitHub). Branches are like versions of a repository and they point to a particular commit.


-- What is the benefit of having a copy of the last known state of the remote stored locally?
* That way you instantly know what has changed, so it's more efficient to merge, diff and so on because you don't have to find it out by other measures.


-- How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
* I would use any file sharing service. I wouldn't have any extra work thanks to not having any sort of version control, but anyone with adequate access to my project could mess it up and we would have a hard time recovering from that.


-- When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
* You would operate on a different branch when you need a stable version of your software for some reason. Changing master directly is easier and faster, but a pull request is more organized and making them is a nice way to create a collaborative workflow.
